# This workflow will build a package using Maven and then publish it to maven cnetral
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Release

on:
  workflow_dispatch:
    inputs:
      release-body:
        description: 'Text describing the contents of the release.'
        required: false
        default: ''

jobs:
  release:
    runs-on: ubuntu-latest
    environment: Maven
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up Apache Maven Central
      uses: actions/setup-java@v2
      with: # running setup-java again overwrites the settings.xml
        distribution: 'zulu'
        java-version: '11'
        server-id: ossrh
        server-username: MAVEN_CENTRAL_USER # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        settings-path: ${{ github.workspace }}/generated-settings
    - name: Read settings.xml
      id: settings
      uses: juliangruber/read-file-action@v1
      with:
        path: ${{ github.workspace }}/generated-settings/settings.xml
    - name: Echo settings.xml
      run: echo "${{ steps.settings.outputs.content }}"
    - name: Import GPG Key
      uses: crazy-max/ghaction-import-gpg@v4
      with:
          gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: false
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
   
